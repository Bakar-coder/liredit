version: "3.9"

services:
  webserver:
    build:
      context: ./nginx
    container_name: web_nginx_proxy
    networks:
      - network
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443

  nextapp:
    build:
      context: ./client
    env_file: ./client/.env
    container_name: nextapp
    stdin_open: true
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - network
    volumes:
      - ./client:/usr/app
      - /usr/app/node-modules

  server:
    build:
      context: ./server
    env_file: ./server/.env.production
    container_name: web_server
    networks:
      - network
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13.2-alpine
    restart: unless-stopped
    container_name: web_postres_database
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgres/data
    networks:
      - network
  redis:
    image: redis:6.2.1-alpine
    container_name: web_redis_database
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
